//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReferenceClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FibonacciRequest", Namespace="http://schemas.datacontract.org/2004/07/WcfTrainingExample")]
    [System.SerializableAttribute()]
    public partial class FibonacciRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseRecursiveAlgorithmField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseRecursiveAlgorithm {
            get {
                return this.UseRecursiveAlgorithmField;
            }
            set {
                if ((this.UseRecursiveAlgorithmField.Equals(value) != true)) {
                    this.UseRecursiveAlgorithmField = value;
                    this.RaisePropertyChanged("UseRecursiveAlgorithm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FibonacciResult", Namespace="http://schemas.datacontract.org/2004/07/WcfTrainingExample")]
    [System.SerializableAttribute()]
    public partial class FibonacciResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReferenceClient.ServiceReference.FibonacciValue DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReferenceClient.ServiceReference.FibonacciValue Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FibonacciValue", Namespace="http://schemas.datacontract.org/2004/07/WcfTrainingExample")]
    [System.SerializableAttribute()]
    public partial class FibonacciValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IterationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Formula {
            get {
                return this.FormulaField;
            }
            set {
                if ((object.ReferenceEquals(this.FormulaField, value) != true)) {
                    this.FormulaField = value;
                    this.RaisePropertyChanged("Formula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Iterations {
            get {
                return this.IterationsField;
            }
            set {
                if ((this.IterationsField.Equals(value) != true)) {
                    this.IterationsField = value;
                    this.RaisePropertyChanged("Iterations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IExampleService")]
    public interface IExampleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/TestServiceWebGet", ReplyAction="http://tempuri.org/IExampleService/TestServiceWebGetResponse")]
        string TestServiceWebGet(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/TestServiceWebGet", ReplyAction="http://tempuri.org/IExampleService/TestServiceWebGetResponse")]
        System.Threading.Tasks.Task<string> TestServiceWebGetAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/TestServiceWebPost", ReplyAction="http://tempuri.org/IExampleService/TestServiceWebPostResponse")]
        string TestServiceWebPost(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/TestServiceWebPost", ReplyAction="http://tempuri.org/IExampleService/TestServiceWebPostResponse")]
        System.Threading.Tasks.Task<string> TestServiceWebPostAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/TestService", ReplyAction="http://tempuri.org/IExampleService/TestServiceResponse")]
        string TestService(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/TestService", ReplyAction="http://tempuri.org/IExampleService/TestServiceResponse")]
        System.Threading.Tasks.Task<string> TestServiceAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/FibonacciWebGet", ReplyAction="http://tempuri.org/IExampleService/FibonacciWebGetResponse")]
        string FibonacciWebGet(string number, string useRecursiveAlgorithm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/FibonacciWebGet", ReplyAction="http://tempuri.org/IExampleService/FibonacciWebGetResponse")]
        System.Threading.Tasks.Task<string> FibonacciWebGetAsync(string number, string useRecursiveAlgorithm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/FibonacciWebPost", ReplyAction="http://tempuri.org/IExampleService/FibonacciWebPostResponse")]
        string FibonacciWebPost(ReferenceClient.ServiceReference.FibonacciRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/FibonacciWebPost", ReplyAction="http://tempuri.org/IExampleService/FibonacciWebPostResponse")]
        System.Threading.Tasks.Task<string> FibonacciWebPostAsync(ReferenceClient.ServiceReference.FibonacciRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/Fibonacci", ReplyAction="http://tempuri.org/IExampleService/FibonacciResponse")]
        ReferenceClient.ServiceReference.FibonacciResult Fibonacci(ReferenceClient.ServiceReference.FibonacciRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/Fibonacci", ReplyAction="http://tempuri.org/IExampleService/FibonacciResponse")]
        System.Threading.Tasks.Task<ReferenceClient.ServiceReference.FibonacciResult> FibonacciAsync(ReferenceClient.ServiceReference.FibonacciRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExampleServiceChannel : ReferenceClient.ServiceReference.IExampleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExampleServiceClient : System.ServiceModel.ClientBase<ReferenceClient.ServiceReference.IExampleService>, ReferenceClient.ServiceReference.IExampleService {
        
        public ExampleServiceClient() {
        }
        
        public ExampleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExampleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExampleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string TestServiceWebGet(string data) {
            return base.Channel.TestServiceWebGet(data);
        }
        
        public System.Threading.Tasks.Task<string> TestServiceWebGetAsync(string data) {
            return base.Channel.TestServiceWebGetAsync(data);
        }
        
        public string TestServiceWebPost(string data) {
            return base.Channel.TestServiceWebPost(data);
        }
        
        public System.Threading.Tasks.Task<string> TestServiceWebPostAsync(string data) {
            return base.Channel.TestServiceWebPostAsync(data);
        }
        
        public string TestService(string data) {
            return base.Channel.TestService(data);
        }
        
        public System.Threading.Tasks.Task<string> TestServiceAsync(string data) {
            return base.Channel.TestServiceAsync(data);
        }
        
        public string FibonacciWebGet(string number, string useRecursiveAlgorithm) {
            return base.Channel.FibonacciWebGet(number, useRecursiveAlgorithm);
        }
        
        public System.Threading.Tasks.Task<string> FibonacciWebGetAsync(string number, string useRecursiveAlgorithm) {
            return base.Channel.FibonacciWebGetAsync(number, useRecursiveAlgorithm);
        }
        
        public string FibonacciWebPost(ReferenceClient.ServiceReference.FibonacciRequest request) {
            return base.Channel.FibonacciWebPost(request);
        }
        
        public System.Threading.Tasks.Task<string> FibonacciWebPostAsync(ReferenceClient.ServiceReference.FibonacciRequest request) {
            return base.Channel.FibonacciWebPostAsync(request);
        }
        
        public ReferenceClient.ServiceReference.FibonacciResult Fibonacci(ReferenceClient.ServiceReference.FibonacciRequest request) {
            return base.Channel.Fibonacci(request);
        }
        
        public System.Threading.Tasks.Task<ReferenceClient.ServiceReference.FibonacciResult> FibonacciAsync(ReferenceClient.ServiceReference.FibonacciRequest request) {
            return base.Channel.FibonacciAsync(request);
        }
    }
}
